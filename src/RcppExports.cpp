// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// fast_history_compute
NumericMatrix fast_history_compute(DataFrame df, DoubleVector normalized_tau, DoubleVector mixed_state, DoubleVector history_init);
RcppExport SEXP _bistablehistory_fast_history_compute(SEXP dfSEXP, SEXP normalized_tauSEXP, SEXP mixed_stateSEXP, SEXP history_initSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type df(dfSEXP);
    Rcpp::traits::input_parameter< DoubleVector >::type normalized_tau(normalized_tauSEXP);
    Rcpp::traits::input_parameter< DoubleVector >::type mixed_state(mixed_stateSEXP);
    Rcpp::traits::input_parameter< DoubleVector >::type history_init(history_initSEXP);
    rcpp_result_gen = Rcpp::wrap(fast_history_compute(df, normalized_tau, mixed_state, history_init));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP _rcpp_module_boot_stan_fit4historylm_mod();

static const R_CallMethodDef CallEntries[] = {
    {"_bistablehistory_fast_history_compute", (DL_FUNC) &_bistablehistory_fast_history_compute, 4},
    {"_rcpp_module_boot_stan_fit4historylm_mod", (DL_FUNC) &_rcpp_module_boot_stan_fit4historylm_mod, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_bistablehistory(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
